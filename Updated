!pip install torch
!pip install transformers
!pip install --upgrade git+https://github.com/google/flax.git

from transformers import VisionEncoderDecoderModel, ViTFeatureExtractor, AutoTokenizer
import requests
from PIL import Image
import shutil
import urllib

model = VisionEncoderDecoderModel.from_pretrained("nlpconnect/vit-gpt2-image-captioning")
feature_extractor = ViTFeatureExtractor.from_pretrained("nlpconnect/vit-gpt2-image-captioning")
tokenizer = AutoTokenizer.from_pretrained("nlpconnect/vit-gpt2-image-captioning")
max_length = 16
beams = 4
max_size = {"max_length": max_length, "num_beams": beams}
def img_to_text(image_paths):
  images = []
  for image_path in image_paths:
    i_image = Image.open(image_path)
    images.append(i_image)
  pixel_values = feature_extractor(images=images, return_tensors="pt").pixel_values
  pixel_values = pixel_values.to(device)

  output_ids = model.generate(pixel_values, **max_size)

  preds = tokenizer.batch_decode(output_ids, skip_special_tokens=True)
  preds = [pred.strip() for pred in preds]
  return preds


img_to_text(['url'])

def url_to_img(pain):
  img_url = pain
  urllib.request.urlretrieve(img_url, "url")

url_to_img('https://ychef.files.bbci.co.uk/976x549/p07v2wjn.jpg')

def alt_text(bodies):
  url_to_img(bodies)
  print(img_to_text(["url"]))


alt_text("https://ychef.files.bbci.co.uk/976x549/p07v2wjn.jpg")
